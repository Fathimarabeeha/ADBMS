1.Write a MongoDB query to create an INVOICE database and collections (CUSTOMER, PRODUCT) and its corresponding documents

INVOICE> db.customer.insertOne({
... customer_id:"101",
... name:"Bob",
... address: { street: "1 main st", city: "CLT", zip: "123456" },
... phone:"123456785"
... })
{
  acknowledged: true,
  insertedId: ObjectId('68013bcd7b98119ab6b5f89e')
}
INVOICE> db.customer.insertOne({
... customer_id:"102",
... name:"Alice",
... address:{street:"2 main st",city:"TVM",zip:"456123"},
... phone:"123457813"
... })
{
  acknowledged: true,
  insertedId: ObjectId('68013c707b98119ab6b5f89f')
}
INVOICE> db.product.insertOne({
...
...
... p_id:"1",
... name:"laptop",
... price:"20000",
... stock:"20"
... })
{
  acknowledged: true,
  insertedId: ObjectId('680137f37b98119ab6b5f89c')
}
INVOICE> db.product.insertOne({
... p_id:"2",
... name:"mouse",
... price:"1000",
... stock:"30"
... })
{
  acknowledged: true,
  insertedId: ObjectId('6801383b7b98119ab6b5f89d')
}

2.Write a MongoDB query to find all documents from the collection CUSTOMER.

INVOICE> db.customer.find({})
[
  {
    _id: ObjectId('68013bcd7b98119ab6b5f89e'),
    customer_id: '101',
    name: 'Bob',
    address: { street: '1 main st', city: 'CLT', zip: '123456' },
    phone: '123456785'
  },
  {
    _id: ObjectId('68013c707b98119ab6b5f89f'),
    customer_id: '102',
    name: 'Alice',
    address: { street: '2 main st', city: 'TVM', zip: '456123' },
    phone: '123457813'
  }
]

3.Write a MongoDB query to update the city in the collection CUSTOMER.
INVOICE> db.customer.updateOne(
... { name:"Bob"},
... { $set:{"address.city":"New York"} }
... )
{
  acknowledged: true,
  insertedId: null,
  matchedCount: 1,
  modifiedCount: 1,
  upsertedCount: 0
}

4.Write a MongoDB query to delete the first matched document whose city is “Clt”.

INVOICE> db.customer.deleteOne({"address.city":"CLT"})
{ acknowledged: true, deletedCount: 0 }
