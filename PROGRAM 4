a) ACCESSING DATABASE:  (SELECT, Filtering using WHERE, ORDER BY Clauses)

  1. List all invoice items, avoid duplicates.

     mysql> select *from invoice_item0;
     +--------+------+----------+
     | inv_id | p_id | quantity |
     +--------+------+----------+
     |    103 |    3 |        7 |
     |    101 |    1 |        7 |
     |    102 |    1 |        3 |
     |    102 |    1 |        3 |
     |    103 |    3 |        7 |
     +--------+------+----------+
     5 rows in set (0.00 sec)

     mysql> select distinct inv_id,p_id,quantity from invoice_item0;
     +--------+------+----------+
     | inv_id | p_id | quantity |
     +--------+------+----------+
     |    103 |    3 |        7 |
     |    101 |    1 |        7 |
     |    102 |    1 |        3 |
     +--------+------+----------+
     3 rows in set (0.00 sec)

  2.List the invoice details from 1st January 2024 to 31st march 2024
 
     mysql> select *from invoice_master0;
     +--------+---------+------------+
     | inv_id | cust_id | inv_date   |
     +--------+---------+------------+
     |    101 |    NULL | 2023-01-01 |
     |    102 |    NULL | 2023-02-12 |
     |    103 |  100003 | 2023-05-21 |
     |    104 |    NULL | 2023-07-26 |
     |    105 |    NULL | 2024-07-10 |
     |    106 |    NULL | 2024-02-07 |
     |    107 |    NULL | 2024-03-17 |
     |    108 |    NULL | 2024-12-17 |
     +--------+---------+------------+
     8 rows in set (0.00 sec)

     mysql> select * from invoice_master0 where inv_date between  '2024-01-01' AND '2024-03-31';
    +--------+---------+------------+
    | inv_id | cust_id | inv_date   |
    +--------+---------+------------+
    |    106 |    NULL | 2024-02-07 |
    |    107 |    NULL | 2024-03-17 |
    +--------+---------+------------+
    2 rows in set (0.00 sec)
    
  3.List the customer details who not live in ‘tvm’. 
    
     mysql> select *from customer0;
     +---------+------+-----------+------------+-----------+
     | cust_id | name | address   | city       | ph_no     |
     +---------+------+-----------+------------+-----------+
     |   10001 | A    | atholi    | tvm        | 546546511 |
     |   10002 | B    | atholi    | ekm        | 546546511 |
     |  100003 | C    | annassery | malappuram | 578785356 |
     +---------+------+-----------+------------+-----------+
     3 rows in set (0.00 sec)

     mysql> select *from customer0 where city <> 'tvm';
     +---------+------+-----------+------------+-----------+
     | cust_id | name | address   | city       | ph_no     |
     +---------+------+-----------+------------+-----------+
     |   10002 | B    | atholi    | ekm        | 546546511 |
     |  100003 | C    | annassery | malappuram | 578785356 |
     +---------+------+-----------+------------+-----------+
     2 rows in set (0.01 sec)

  4.List the customers who have no phone number.

     mysql> select *from customer0;
     +---------+------+-----------+------------+-----------+
     | cust_id | name | address   | city       | ph_no     |
     +---------+------+-----------+------------+-----------+
     |   10001 | A    | atholi    | tvm        | 546546511 |
     |   10002 | B    | atholi    | ekm        | 546546511 |
     |   10004 | B    | atholi    | ekm        |      NULL |
     |  100003 | C    | annassery | malappuram | 578785356 |
     +---------+------+-----------+------------+-----------+
     4 rows in set (0.00 sec)

     mysql> select *from customer0 where ph_no is null;
     +---------+------+---------+------+-------+
     | cust_id | name | address | city | ph_no |
     +---------+------+---------+------+-------+
     |   10004 | B    | atholi  | ekm  |  NULL |
     +---------+------+---------+------+-------+
     1 row in set (0.00 sec)

  5.Display customer names in descending order.
     
     mysql> select *from customer0;
     +---------+------+-----------+------------+-----------+
     | cust_id | name | address   | city       | ph_no     |
     +---------+------+-----------+------------+-----------+
     |   10001 | A    | atholi    | tvm        | 546546511 |
     |   10002 | B    | atholi    | ekm        | 546546511 |
     |   10004 | B    | atholi    | ekm        |      NULL |
     |  100003 | C    | annassery | malappuram | 578785356 |
     +---------+------+-----------+------------+-----------+
     4 rows in set (0.00 sec)

     mysql> select name from customer0 order by name desc;
     +------+
     | name |
     +------+
     | C    |
     | B    |
     | B    |
     | A    |
     +------+
     4 rows in set (0.00 sec)

  6.Display the customer details sorted in ascending by city and descending by names.
  
    mysql> select *from customer0;
    +---------+------+-----------+------------+-----------+
    | cust_id | name | address   | city       | ph_no     |
    +---------+------+-----------+------------+-----------+
    |   10001 | A    | atholi    | tvm        | 546546511 |
    |   10002 | B    | atholi    | ekm        | 546546511 |
    |   10004 | B    | atholi    | ekm        |      NULL |
    |  100003 | C    | annassery | malappuram | 578785356 |
    +---------+------+-----------+------------+-----------+
    4 rows in set (0.00 sec)

    mysql> select * from customer0 order by city asc, name desc;
    +---------+------+-----------+------------+-----------+
    | cust_id | name | address   | city       | ph_no     |
    +---------+------+-----------+------------+-----------+
    |   10002 | B    | atholi    | ekm        | 546546511 |
    |   10004 | B    | atholi    | ekm        |      NULL |
    |  100003 | C    | annassery | malappuram | 578785356 |
    |   10001 | A    | atholi    | tvm        | 546546511 |
    +---------+------+-----------+------------+-----------+
    4 rows in set (0.00 sec)

  7.Find the customer names who have ‘e’ or ‘a’ in them and at least 3  characters in length.

    mysql> select * from customer0;
   +---------+---------+-----------+------------+-----------+
   | cust_id | name    | address   | city       | ph_no     |
   +---------+---------+-----------+------------+-----------+
   |   10001 | arbit   | atholi    | tvm        | 546546511 |
   |   10002 | Rifa    | atholi    | ekm        | 546546511 |
   |   10004 | Rifa    | atholi    | ekm        |      NULL |
   |   10006 | earson  | athani    | calicut    | 875454488 |
   |   10007 | fathima | athani    | calicut    | 875454488 |
   |  100003 | C       | annassery | malappuram | 578785356 |
   +---------+---------+-----------+------------+-----------+
   6 rows in set (0.00 sec)


    mysql> select name from customer0 where(name like '%e%' or name like  '%a%') and length(name) >= 3;
    +---------+
    | name    |
    +---------+
    | earson  |
    | fathima |
    +---------+
    2 rows in set (0.00 sec)
    
  8.List the names of customers their names have ‘r’ in second position.

    mysql> select * from customer0;
    +---------+---------+-----------+------------+-----------+
    | cust_id | name    | address   | city       | ph_no     |
    +---------+---------+-----------+------------+-----------+
    |   10001 | arbit   | atholi    | tvm        | 546546511 |
    |   10002 | Rifa    | atholi    | ekm        | 546546511 |
    |   10004 | Rifa    | atholi    | ekm        |      NULL |
    |   10006 | earson  | athani    | calicut    | 875454488 |
    |   10007 | fathima | athani    | calicut    | 875454488 |
    |  100003 | C       | annassery | malappuram | 578785356 |
    +---------+---------+-----------+------------+-----------+
    6 rows in set (0.00 sec)

    mysql> select name from customer0 where name like'_r%' ;
    +-------+
    | name  |
    +-------+
    | arbit |
    +-------+
    1 row in set (0.00 sec)



b) OPTIMIZING DATABASE:  (GROUP BY, AGGREGATE FUNCTIONS)

  1.List product name, price except soap on price order.
 
    mysql> select * from product2;
     +------+--------+-------+
     | p_id | name   | price |
     +------+--------+-------+
     |    1 | pen    |    51 |
     |    2 | pencil |    71 |
     |    3 | soap   |    61 |
     |    4 | sketch |    82 |
     |    5 | book   |    82 |
     +------+--------+-------+
     5 rows in set (0.00 sec)


    mysql> select name,price from product2 where name !='soap' order by price;
     +--------+-------+
     | name   | price |
     +--------+-------+
     | pen    |    51 |
     | pencil |    71 |
     | sketch |    82 |
     | book   |    82 |
     +--------+-------+
   4 rows in set (0.00 sec)
   
 2.Find minimum, maximum and average price of products.

    mysql> SELECT min(price) as min_price, max(price) as max_price,  avg(price) as avg_price FROM product2;
    +-----------+-----------+-----------+
    | min_price | max_price | avg_price |
    +-----------+-----------+-----------+
    |        51 |        82 |      69.4 |
    +-----------+-----------+-----------+
    1 row in set (0.00 sec)

3.Find number of customers in each city.
  
   mysql> select count(city) from customer0 group by city;
   +-------------+
   | count(city) |
   +-------------+
   |           1 |
   |           2 |
   |           2 |
   |           1 |
   +-------------+
   4 rows in set (0.01 sec)

4.Find number of customers in each city, only include city with more than 3 customers.

 mysql> select count(city) from customer0 group by city having count(*) > 3;
    +-------------+
    | count(city) |
    +-------------+
    |           4 |
    +-------------+
    1 row in set (0.00 sec)

 5.Show data as displayed ‘who, where’ Eg: ‘customer1 lives in ekm’

    mysql> select concat(name, ' lives in ', city) as cust_location from customer0;
    +-----------------------+
    | cust_location         |
    +-----------------------+
    | arbit lives in tvm    |
    | Rifa lives in ekm     |
    | Rifa lives in ekm     |
    | earson lives in ekm   |
    | fathima lives in ekm  |
    | C lives in malappuram |
    +-----------------------+
    6 rows in set (0.01 sec)

